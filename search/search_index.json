{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Repository for various \u03bcbenchmarks results on my personal hardware:</p>"},{"location":"#cpu","title":"CPU","text":"<ul> <li>Trees and data-structures</li> </ul>"},{"location":"#gpu","title":"GPU","text":""},{"location":"#storage-filesystem","title":"Storage &amp; FileSystem","text":"<ul> <li>BabelZone</li> </ul>"},{"location":"CPU/","title":"CPU","text":"<ul> <li>Trees and data-structures</li> </ul>"},{"location":"CPU/trees/","title":"Trees and data-structures","text":"<p>Trees are O(ln(n)) and tend to be widely used. But how much time do we loose by using them?</p>"},{"location":"CPU/trees/#hardware-description","title":"Hardware description","text":"<ul> <li>AMD Ryzen 5900x 12-Core @3.7GHz (zen3, up to 4.951GHz)</li> <li>2x 32GB-DDR4-ECC-unbuffered (PN: 9965745-020.A00G)</li> </ul>"},{"location":"CPU/trees/#bench-list","title":"\u03bcBench list","text":""},{"location":"CPU/trees/#arrays-malloc","title":"Arrays (malloc())","text":"<pre><code>typedef uint32_t E;\nE *aTest = (E*)malloc(max * sizeof(E));\n</code></pre>"},{"location":"CPU/trees/#vectors-stdvector","title":"Vectors (std::vector)","text":"<pre><code>typedef uint32_t E;\nstd::vector&lt;E&gt; vecTest;\n</code></pre>"},{"location":"CPU/trees/#red-black-tree-stdmap","title":"Red-Black tree (std::map)","text":"<pre><code>typedef uint32_t E;\nstd::map&lt;E, E&gt; mapTest;\n</code></pre>"},{"location":"CPU/trees/#red-black-tree-optimized","title":"Red-Black tree (optimized)","text":"<ul> <li>Switch from 64b pointers to 32b array indexes</li> <li>No support variable length keys and payload (eg: strings)</li> <li>Room for improvement:<ul> <li>use 31b indexes to save 1 bit for the color (and 1 byte per element)</li> </ul> </li> </ul>"},{"location":"CPU/trees/#b-tree","title":"B-tree","text":"<p>Todo</p> <p>Should reduce the number of memory jumps</p>"},{"location":"CPU/trees/#step-by-step-analysis","title":"Step By Step Analysis","text":""},{"location":"CPU/trees/#timing-comparison","title":"Timing comparison","text":"<p>Observations:</p> <ul> <li>The curves are looking logarithmic</li> <li>The access pattern matters</li> <li>The random accesses are noisy and slower by magnitude orders</li> </ul>"},{"location":"CPU/trees/#cpu-cycle-comparison","title":"CPU cycle comparison","text":"<p>Observations:</p> <ul> <li>Same results (the system is was not loaded)</li> <li>It's easier to see that with Trees, the efficiency is lower than 1%</li> </ul>"},{"location":"CPU/trees/#cpu-cycle-in-loglog-scale","title":"CPU cycle in loglog scale","text":"<p>Observations:</p> <ul> <li>Cache effects are clearly shown</li> <li>Vector/Array random accesses are slower<ul> <li>it's due to the benchmark implementation</li> <li>a better one (and a larger one) should also show cache effects</li> </ul> </li> </ul>"},{"location":"CPU/trees/#hardware-counters","title":"Hardware counters","text":"<p>Observations:</p> <ul> <li>L2 influence from ~2^10 to 2^15</li> <li>The bump from 2^24 to 2^27 might be due to the L3 (I failed to retrieve the L3 misses from this CPU)</li> </ul>"},{"location":"CPU/trees/#summary","title":"Summary","text":"size per element access latency (nsec) access latency (cycle) array 4B 1.392 6.029 vectors 4B 1.362 6.029 rb-tree (std::map) 48B 1099.96 4742.51 rb-tree (custom) 21B 770.55 3791.34 b-tree (abseil) b-tree (custom1) b-tree (custom2) b-tree (custom3)"},{"location":"FileSystem/","title":"FileSystem","text":"<ul> <li>BabelZone</li> </ul>"},{"location":"FileSystem/iozone/","title":"BabelZone","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#benchmark","title":"Benchmark","text":"<ul> <li>Unmodified IOzone in auto mode</li> <li>Figures generated with Python/Pandas/Matplotlib</li> <li>Free memory: ~3GB (-&gt; buffer cache smaller than 3GB)<ul> <li>smaller runtime</li> </ul> </li> </ul> <p>Warning</p> <p>Don't forget the buffer cache behavior !</p>","tags":["iozone"]},{"location":"FileSystem/iozone/#results","title":"Results","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#hdd","title":"HDD","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#hitachi-ultrastar-sata-7200rpm","title":"Hitachi Ultrastar SATA 7200RPM","text":"<p>Datasheet:</p> <ul> <li>PN: HUA722010CLA330</li> <li>Disk Family: Ultrastar A7K2000</li> <li>Form Factor: 3.5\"</li> <li>Capacity: 1TB</li> <li>Rotational Speed: 7200 RPM</li> <li>Rotation Time: 8.33ms</li> <li>Disk Interface: Serial-ATA/300</li> <li>Buffer-Host Max Rate: 300 MB/s</li> <li>Buffer Size: 32768 KB</li> <li>Weight: 680 grams</li> <li>Required Power For Spinup: 3300 mA</li> <li>Power Required (Seek | Idle | Standby): 7 W | 5 W | 2 W</li> </ul> <p> </p>","tags":["iozone"]},{"location":"FileSystem/iozone/#ssd-sata","title":"SSD sata","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#crucial-mx500-sata","title":"Crucial MX500 SATA","text":"<p>Datasheet:</p> <ul> <li>PN: CT1000MX500SSD1</li> <li>Memory Type: Micron 3D TLC NAND Flash</li> <li>Disk Family: MX500</li> <li>Form Factor: 2.5\"</li> <li>Capacity: 1TB</li> <li>Disk Interface: Serial-ATA/600</li> <li>512 byte sector size support</li> <li>Power Required (Seek | Sleep): 5 W | 3mW</li> <li>Endurance - total bytes written (TBW): Up to 1000TB</li> </ul> <p> </p>","tags":["iozone"]},{"location":"FileSystem/iozone/#ssd-nvme","title":"SSD nvme","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#samsung-970-evo-plus-2tb","title":"Samsung 970 Evo Plus 2TB","text":"<ul> <li>Memory Type: Samsung V-NAND 3bit MLC</li> <li>PN: ???</li> <li>Cache Memory: 2GB LPDDR4</li> <li>Form Factor: M.2 (2280)</li> <li>Capacity: 2TB</li> <li>Disk Interface: PCIe Gen 3.0 x4 (x2 on the mother board)</li> <li>Power Required (Read | Write | Sleep): 5.5 W | 6 W | 5 mW</li> <li>Endurance - total bytes written (TBW): Up to 1200TB</li> </ul> <p>Todo</p> <p>It should be nice to see the behavior of the LPDDR (cache ? buffer ?)</p>","tags":["iozone"]},{"location":"FileSystem/iozone/#samsung-970-evo-plus-1tb-4x","title":"Samsung 970 Evo Plus 1TB 4X","text":"<p>Todo</p> <ul> <li>Run IOzone</li> <li>show the LPPDR too</li> </ul>","tags":["iozone"]},{"location":"FileSystem/iozone/#zfs-raidz2","title":"ZFS RAIDZ2","text":"<p>Upcoming</p> <p>Coming soon </p>","tags":["iozone"]},{"location":"FileSystem/iozone/#mother-board-controller","title":"Mother Board Controller","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#hba","title":"HBA","text":"","tags":["iozone"]},{"location":"FileSystem/iozone/#nfs","title":"NFS","text":"","tags":["iozone"]},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#tag:iozone","title":"iozone","text":"<ul> <li>            BabelZone          </li> </ul>"}]}